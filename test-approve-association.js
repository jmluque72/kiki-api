const axios = require('axios');

const API_BASE_URL = 'http://localhost:3000';

async function testApproveAssociation() {
  try {
    console.log('üß™ Probando aprobaci√≥n de asociaciones...\n');

    // 1. Login como test@kiki.ar
    console.log('1Ô∏è‚É£ Login como test@kiki.ar...');
    const loginResponse = await axios.post(`${API_BASE_URL}/api/users/login`, {
      email: 'test@kiki.ar',
      password: 'admin123'
    });

    if (!loginResponse.data.success) {
      console.log('‚ùå Error en login:', loginResponse.data.message);
      return;
    }

    const token = loginResponse.data.data.token;
    const user = loginResponse.data.data.user;
    console.log('‚úÖ Login exitoso');
    console.log(`üë§ Usuario: ${user.nombre} (${user.email})`);
    console.log(`üîë Rol: ${user.role.nombre}`);
    console.log(`üÜî User ID: ${user._id}`);
    console.log('');

    // Configurar headers
    const headers = {
      'Authorization': `Bearer ${token}`,
      'Content-Type': 'application/json'
    };

    // 2. Obtener asociaciones pendientes
    console.log('2Ô∏è‚É£ Obteniendo asociaciones pendientes...');
    const pendingResponse = await axios.get(`${API_BASE_URL}/api/users/pending-associations`, { headers });
    
    if (pendingResponse.data.data.length === 0) {
      console.log('üì≠ No hay asociaciones pendientes para aprobar');
      return;
    }

    console.log(`üìä Total asociaciones pendientes: ${pendingResponse.data.data.length}`);
    
    // Mostrar las primeras 3 asociaciones
    const associationsToTest = pendingResponse.data.data.slice(0, 3);
    associationsToTest.forEach((association, index) => {
      console.log(`   ${index + 1}. ID: ${association._id}`);
      console.log(`      Usuario: ${association.user.name} (${association.user.email})`);
      console.log(`      Cuenta: ${association.account.nombre} (${association.account.razonSocial})`);
      console.log(`      Rol: ${association.role.nombre}`);
      console.log('');
    });

    // 3. Probar aprobar la primera asociaci√≥n
    const firstAssociation = associationsToTest[0];
    console.log('3Ô∏è‚É£ Probando aprobar asociaci√≥n...');
    console.log(`üì° Haciendo request a: ${API_BASE_URL}/api/users/approve-association/${firstAssociation._id}`);
    console.log('');

    try {
      const approveResponse = await axios.put(
        `${API_BASE_URL}/api/users/approve-association/${firstAssociation._id}`, 
        {}, 
        { headers }
      );
      
      console.log('‚úÖ Asociaci√≥n aprobada exitosamente');
      console.log('üìã Respuesta:', approveResponse.data.message);
      console.log('üìä Datos actualizados:', {
        status: approveResponse.data.data.status,
        updatedAt: approveResponse.data.data.updatedAt
      });
      
    } catch (error) {
      console.log('‚ùå Error aprobando asociaci√≥n:');
      console.log('   Status:', error.response?.status);
      console.log('   Message:', error.response?.data?.message || error.message);
      if (error.response?.data) {
        console.log('   Data:', JSON.stringify(error.response.data, null, 2));
      }
    }

    // 4. Verificar que la asociaci√≥n ya no aparece en pendientes
    console.log('\n4Ô∏è‚É£ Verificando que la asociaci√≥n ya no aparece en pendientes...');
    const updatedPendingResponse = await axios.get(`${API_BASE_URL}/api/users/pending-associations`, { headers });
    
    const stillPending = updatedPendingResponse.data.data.filter(
      assoc => assoc._id === firstAssociation._id
    );
    
    if (stillPending.length === 0) {
      console.log('‚úÖ La asociaci√≥n ya no aparece en pendientes (correcto)');
    } else {
      console.log('‚ùå La asociaci√≥n a√∫n aparece en pendientes');
    }

  } catch (error) {
    console.error('‚ùå Error general:', error.message);
  }
}

// Ejecutar la prueba
testApproveAssociation(); 