const axios = require('axios');
const FormData = require('form-data');
const fs = require('fs');
const path = require('path');

const API_BASE_URL = 'http://localhost:3000';

async function testAvatarSimple() {
  try {
    console.log('üß™ [TEST AVATAR SIMPLE] Probando endpoint de avatar...\n');

    // 1. Login
    console.log('1Ô∏è‚É£ Login...');
    const loginResponse = await axios.post(`${API_BASE_URL}/api/users/login`, {
      email: 'carlos.perez@email.com',
      password: 'password123'
    });

    const token = loginResponse.data.data.token;
    console.log('‚úÖ Login exitoso');

    // 2. Crear imagen de prueba
    console.log('\n2Ô∏è‚É£ Creando imagen de prueba...');
    const testImagePath = path.join(__dirname, 'test-avatar-simple.jpg');
    
    // Crear una imagen simple de prueba (1x1 pixel JPEG)
    const testImageBuffer = Buffer.from([
      0xFF, 0xD8, 0xFF, 0xE0, 0x00, 0x10, 0x4A, 0x46, 0x49, 0x46, 0x00, 0x01,
      0x01, 0x01, 0x00, 0x48, 0x00, 0x48, 0x00, 0x00, 0xFF, 0xDB, 0x00, 0x43,
      0x00, 0x08, 0x06, 0x06, 0x07, 0x06, 0x05, 0x08, 0x07, 0x07, 0x07, 0x09,
      0x09, 0x08, 0x0A, 0x0C, 0x14, 0x0D, 0x0C, 0x0B, 0x0B, 0x0C, 0x19, 0x12,
      0x13, 0x0F, 0x14, 0x1D, 0x1A, 0x1F, 0x1E, 0x1D, 0x1A, 0x1C, 0x1C, 0x20,
      0x24, 0x2E, 0x27, 0x20, 0x22, 0x2C, 0x23, 0x1C, 0x1C, 0x28, 0x37, 0x29,
      0x2C, 0x30, 0x31, 0x34, 0x34, 0x34, 0x1F, 0x27, 0x39, 0x3D, 0x38, 0x32,
      0x3C, 0x2E, 0x33, 0x34, 0x32, 0xFF, 0xC0, 0x00, 0x11, 0x08, 0x00, 0x01,
      0x00, 0x01, 0x01, 0x01, 0x11, 0x00, 0x02, 0x11, 0x01, 0x03, 0x11, 0x01,
      0xFF, 0xC4, 0x00, 0x14, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xFF, 0xC4,
      0x00, 0x14, 0x10, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xDA, 0x00, 0x0C,
      0x03, 0x01, 0x00, 0x02, 0x11, 0x03, 0x11, 0x00, 0x3F, 0x00, 0x8A, 0x00,
      0xFF, 0xD9
    ]);

    fs.writeFileSync(testImagePath, testImageBuffer);
    console.log('‚úÖ Imagen de prueba creada');

    // 3. Subir avatar del estudiante
    console.log('\n3Ô∏è‚É£ Subiendo avatar...');
    const formData = new FormData();
    formData.append('avatar', fs.createReadStream(testImagePath), {
      filename: 'test-avatar-simple.jpg',
      contentType: 'image/jpeg'
    });

    const studentId = '68b2ef57c9d2e9a7e5743131'; // Juan P√©rez
    console.log('   Estudiante ID:', studentId);

    const uploadResponse = await axios.put(
      `${API_BASE_URL}/api/students/${studentId}/avatar`,
      formData,
      {
        headers: {
          ...formData.getHeaders(),
          Authorization: `Bearer ${token}`
        }
      }
    );

    console.log('‚úÖ Respuesta del servidor:', uploadResponse.data);

    // 4. Limpiar
    if (fs.existsSync(testImagePath)) {
      fs.unlinkSync(testImagePath);
      console.log('\n‚úÖ Archivo de prueba eliminado');
    }

  } catch (error) {
    console.error('\n‚ùå [TEST AVATAR SIMPLE] Error:', error.message);
    
    if (error.response) {
      console.error('   Status:', error.response.status);
      console.error('   Data:', error.response.data);
    }
  }
}

testAvatarSimple();
